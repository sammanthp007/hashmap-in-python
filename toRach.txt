# Instructions:
# This program is written by Samman Bikram Thapa. To run the program, you need to have python 3.* in your computer. 
# Open the terminal in *nix environment or command line in your windows computer, and navigate to the directory with this file. Then type 
# python samman_hashmap.py

# The source for the program is

class HashMap(object):
	def __init__(self, max_num_of_items):
		self.num_of_items = max_num_of_items
		if self.num_of_items == 0:
			self.bucket_size = 0
		elif self.num_of_items == 1:
			self.bucket_size = 1
		elif self.num_of_items < 10:
			self.bucket_size = 2
		elif self.num_of_items < 100:
			self.bucket_size = self.num_of_items // 5
		else:
			self.bucket_size = self.num_of_items // 10 + 1
		self.hash_table = self.make_hashtable(self.bucket_size)

	def make_hashtable(self, bucket_size):
		hash_table = []
		for buckets in range(bucket_size):
			hash_table.append([])
		return hash_table

	def hash_string(self, string):
		hash_number = 0
		for i in string:
			hash_number += ord(i)
		return hash_number % self.bucket_size

	def hash_table_get_bucket(self, key):
		return self.hash_table[self.hash_string(key)]


	def set(self, key, value):
		bucket = self.hash_table_get_bucket(key)
		for item in bucket:
			if item[0] == key:
				bucket.remove(item)
		bucket.append([key, value])
		if self.get(key) and self.get(key) == value:
			return True
		else:
			return False

	def get(self, key):
		bucket = self.hash_table_get_bucket(key)
		for k, v in bucket:
			if k == key:
				return v
		return None

	def delete(self, key):
		bucket = self.hash_table_get_bucket(key)
		for item in bucket:
			if item[0] == key:
				value = item[1]
				bucket.remove(item)
				return item[1]
		return None

	def load(self):
		items = 0
		for buckets in self.hash_table:
			for keys in buckets:
				items += 1
		return (items / self.num_of_items)

	def show_table(self):
		print (self.hash_table)

# Some tests for the program is

# when size of table = 0
table = HashMap(0)
table.show_table()
print ()
# when size of table = 1
table = HashMap(25)
table.show_table()
print ()
table.set('foo', 'bar')
table.show_table()
print ()
print (table.set('baz', 'stack'))
table.show_table()
print (table.get('foo'))
print (table.delete('foo'))
print (table.set('baz1', 'stack1'))
print (table.set('baz2', 'stack2'))
print (table.set('baz3', 'stack3'))
table.show_table()
print (table.load())